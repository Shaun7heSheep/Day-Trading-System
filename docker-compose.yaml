
version: '3.5'

services:

  redis-cluster:
    image: redis
    command: redis-cli --cluster create 172.20.0.31:6373 172.20.0.32:6374 172.20.0.33:6375 172.20.0.34:6376 172.20.0.35:6377 172.20.0.36:6378 --cluster-replicas 1 --cluster-yes
    networks:
      seng468:
        ipv4_address: 172.20.0.30
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - redis-node-6

  redis-node-1:
    image: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - '6373:6373'
    volumes:
      - redis-node-1-data:/var/lib/redis
      - ./docker/redis-node-1.conf:/usr/local/etc/redis/redis.conf
    networks:
      seng468:
        ipv4_address: 172.20.0.31

  redis-node-2:
    image: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - '6374:6374'
    volumes:
      - redis-node-2-data:/var/lib/redis
      - ./docker/redis-node-2.conf:/usr/local/etc/redis/redis.conf
    networks:
      seng468:
        ipv4_address: 172.20.0.32

  redis-node-3:
    image: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - '6375:6375'
    volumes:
      - redis-node-3-data:/var/lib/redis
      - ./docker/redis-node-3.conf:/usr/local/etc/redis/redis.conf
    networks:
      seng468:
        ipv4_address: 172.20.0.33

  redis-node-4:
    image: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - '6376:6376'
    volumes:
      - redis-node-4-data:/var/lib/redis
      - ./docker/redis-node-4.conf:/usr/local/etc/redis/redis.conf
    networks:
      seng468:
        ipv4_address: 172.20.0.34

  redis-node-5:
    image: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - '6377:6377'
    volumes:
      - redis-node-5-data:/var/lib/redis
      - ./docker/redis-node-5.conf:/usr/local/etc/redis/redis.conf
    networks:
      seng468:
        ipv4_address: 172.20.0.35

  redis-node-6:
    image: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - '6378:6378'
    volumes:
      - redis-node-6-data:/var/lib/redis
      - ./docker/redis-node-6.conf:/usr/local/etc/redis/redis.conf
    networks:
      seng468:
        ipv4_address: 172.20.0.36

  mongos:
    container_name: mongos
    image: mongo
    command: mongos --configdb cfgrs/cfgsvr1:27017,cfgsvr2:27017 --bind_ip 0.0.0.0 --port 27017
    ports:
      - "60000:27017"
    volumes:
      - mongos:/data/db

  webserver:
    container_name: webserver
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - myapp1
      - myapp2
      - myapp3

  subscriptionServer:
    build:
      context: ./subscriptionServer
      dockerfile: Dockerfile
    image: node-subscription
    container_name: subscriptionServer
    environment:
      - REDIS_NODE_1=redis://172.20.0.31:6373
      - REDIS_NODE_2=redis://172.20.0.32:6374
      - REDIS_NODE_3=redis://172.20.0.33:6375
      - REDIS_NODE_4=redis://172.20.0.34:6376
      - REDIS_NODE_5=redis://172.20.0.35:6377
      - REDIS_NODE_6=redis://172.20.0.36:6378
    depends_on:
      - redis-cluster
    command: ./wait-for.sh redis:6379 -- node subscriptionServer.js

  myapp1:
    build:
      context: ./transactionServer
      dockerfile: Dockerfile
    image: node-app
    container_name: myapp1
    environment:
      - PORT=3001
      - MONGODB_CONNSTRING=mongodb://mongos:27017/seng468db
      - REDIS_NODE_1=redis://172.20.0.31:6373
      - REDIS_NODE_2=redis://172.20.0.32:6374
      - REDIS_NODE_3=redis://172.20.0.33:6375
      - REDIS_NODE_4=redis://172.20.0.34:6376
      - REDIS_NODE_5=redis://172.20.0.35:6377
      - REDIS_NODE_6=redis://172.20.0.36:6378
    depends_on:
      - mongos
      - subscriptionServer
    command: ./wait-for.sh mongos:27017 -- npm start
    volumes:
      - nodemodules:/usr/local/app/node_modules

  myapp2:
    build:
      context: ./transactionServer
      dockerfile: Dockerfile
    image: node-app
    container_name: myapp2
    environment:
      - PORT=3002
      - MONGODB_CONNSTRING=mongodb://mongos:27017/seng468db
      - REDIS_NODE_1=redis://172.20.0.31:6373
      - REDIS_NODE_2=redis://172.20.0.32:6374
      - REDIS_NODE_3=redis://172.20.0.33:6375
      - REDIS_NODE_4=redis://172.20.0.34:6376
      - REDIS_NODE_5=redis://172.20.0.35:6377
      - REDIS_NODE_6=redis://172.20.0.36:6378
    depends_on:
      - mongos
      - subscriptionServer
    command: ./wait-for.sh mongos:27017 -- npm start
    volumes:
      - nodemodules:/usr/local/app/node_modules

  myapp3:
    build:
      context: ./transactionServer
      dockerfile: Dockerfile
    image: node-app
    container_name: myapp3
    environment:
      - PORT=3003
      - MONGODB_CONNSTRING=mongodb://mongos:27017/seng468db
      - REDIS_NODE_1=redis://172.20.0.31:6373
      - REDIS_NODE_2=redis://172.20.0.32:6374
      - REDIS_NODE_3=redis://172.20.0.33:6375
      - REDIS_NODE_4=redis://172.20.0.34:6376
      - REDIS_NODE_5=redis://172.20.0.35:6377
      - REDIS_NODE_6=redis://172.20.0.36:6378
    depends_on:
      - mongos
      - subscriptionServer
    command: ./wait-for.sh mongos:27017 -- npm start
    volumes:
      - nodemodules:/usr/local/app/node_modules

volumes:
  mongos:
  redis-node-1-data:
  redis-node-2-data:
  redis-node-3-data:
  redis-node-4-data:
  redis-node-5-data:
  redis-node-6-data:
  node_modules:

networks:
  seng468:
    external: true